{"mappings":"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","sources":["node_modules/justflipit/src/justFlipIt.js"],"sourcesContent":["/*!\n * jQuery Plugin justFlipIt v2.0.0\n * https://github.com/SimHub/justFlipIts://github.com/SimHub/justFlipIt\n *\n * Copyright simon Lackmann\n * Released under the MIT license\n *\n * Date: 2019-25-07\n */\n\n// the semi-colon before function invocation is a safety net against concatenated\n// scripts and/or other plugins which may not be closed properly.\n\n(function($, window, document, undefined) {\n  'use strict';\n\n  // undefined is used here as the undefined global variable in ECMAScript 3 is\n  // mutable (ie. it can be changed by someone else). undefined isn't really being\n  // passed in so we can ensure the value of it is truly undefined. In ES5, undefined\n  // can no longer be modified.\n\n  // window and document are passed through as local variable rather than global\n  // as this (slightly) quickens the resolution process and can be more efficiently\n  // minified (especially when both are regularly referenced in your plugin).\n\n  ////////////////// STYLE //////////////////////////////\n  let style =\n    '<style data-justflipitstyle=\"justFlipIt_One\">' +\n    '._justFlipIt_panel {perspective:1000px;-webkit-perspective:1000px;-moz-perspective:1000px;}' +\n    '._justFlipIt_panel .front{height:inherit;width:inherit;position:absolute;top:0;z-index:900;-webkit-transform:rotateX(0) rotateX(0);-moz-transform:rotateX(0) rotateX(0);-webkit-transform-style:preserve-3d;-moz-transform-style:preserve-3d;-webkit-backface-visibility:hidden;-moz-backface-visibility:hidden;-webkit-transition:all .4s ease-in-out;-moz-transition:all .4s ease-in-out;-ms-transition:all .4s ease-in-out;-o-transition:all .4s ease-in-out;transition:all .4s ease-in-out}' +\n    '._justFlipIt_panel .back{height:inherit;width:inherit;position:absolute;top:0;z-index:1000;-webkit-transform:rotateX(-180deg);-moz-transform:rotateX(-180deg);-webkit-transform-style:preserve-3d;-moz-transform-style:preserve-3d;-webkit-backface-visibility:hidden;-moz-backface-visibility:hidden;-webkit-transition:all .4s ease-in-out;-moz-transition:all .4s ease-in-out;-ms-transition:all .4s ease-in-out;-o-transition:all .4s ease-in-out;transition:all .4s ease-in-out}' +\n    '._justFlipIt_panel._flip_ .front{z-index:900;-webkit-transform:rotateX(180deg);-moz-transform:rotateX(180deg)}' +\n    '._justFlipIt_panel._flip_ .back{z-index:1000;-webkit-transform:rotateX(0) rotateX(0);-moz-transform:rotateX(0) rotateX(0)}' +\n    '</style>';\n  let styleY =\n    '<style data-justflipitstyle=\"justFlipIt_Two\">' +\n    '._justFlipIt_panel .backY{height:inherit;width:inherit;position:absolute;top:0;z-index:1000;-webkit-transform:rotateY(-180deg);-moz-transform:rotateY(-180deg);-webkit-transform-style:preserve-3d;-moz-transform-style:preserve-3d;-webkit-backface-visibility:hidden;-moz-backface-visibility:hidden;-webkit-transition:all .4s ease-in-out;-moz-transition:all .4s ease-in-out;-ms-transition:all .4s ease-in-out;-o-transition:all .4s ease-in-out;transition:all .4s ease-in-out}' +\n    '._justFlipIt_panel._flipY_ .front{z-index:900;-webkit-transform:rotateY(180deg);-moz-transform:rotateY(180deg)}' +\n    '._justFlipIt_panel._flipY_ .backY{z-index:1000;-webkit-transform:rotateX(0) rotateY(0);-moz-transform:rotateX(0) rotateY(0)}' +\n    '</style>';\n  //// APPEND <style> INTO HEAD ////\n  $('head').append(style + styleY);\n  /////////////////////////////////////////////////////////////\n\n  // Create the defaults once\n  let pluginName = 'justFlipIt',\n    defaults = {\n      Template: '',\n      Click: false,\n      FlipX: false,\n      Style: [],\n    };\n\n  // ClassName\n  let backClass;\n  let flipClass;\n  let oldClassNames;\n  let objElement = {};\n\n  // Store Plugin name\n  objElement.pluginName = pluginName;\n\n  // DestroyName variable\n  const _destroy = 'destroy';\n\n  // The actual plugin constructor\n  function Plugin(element, options) {\n    this.element = $(element);\n    this.elementWidth = window\n      .getComputedStyle(this.element[0], null)\n      .getPropertyValue('width');\n    this.elementHeight = window\n      .getComputedStyle(this.element[0], null)\n      .getPropertyValue('height');\n    this.elementBackgroundColor = window\n      .getComputedStyle(this.element[0], null)\n      .getPropertyValue('background-color');\n    // jQuery has an extend method which merges the contents of two or\n    // more objects, storing the result in the first object. The first object\n    // is generally empty as we don't want to alter the default options for\n    // future instances of the plugin\n\n    // Store oldClasses\n    oldClassNames = $(element).attr('class');\n    this.settings = $.extend({}, defaults, options);\n    this._defaults = defaults;\n    this._name = pluginName;\n    this.init();\n  }\n\n  // Avoid Plugin.prototype conflicts\n  $.extend(Plugin.prototype, {\n    init: function() {\n      // Place initialization logic here\n      // You already have access to the DOM element and\n      // the options via the instance, e.g. this.element\n      // and this.settings\n      // you can add more functions like the one below and\n      // call them like so: this.yourOtherFunction(this.element, this.settings).\n\n      //Check if flip axis y is true\n      if (this.settings.FlipX === true) {\n        flipClass = '_flip_';\n        backClass = 'back';\n        objElement.frontClass = '_flip_';\n        objElement.backClass = 'back';\n        this._flipIt(backClass, flipClass);\n      } else {\n        flipClass = '_flipY_';\n        backClass = 'backY';\n        objElement.frontClass = '_flipY_';\n        objElement.backClass = 'backY';\n        this._flipIt(backClass, flipClass);\n      }\n    },\n    _flipIt: function(backClass, flipClass) {\n      //debugger;\n      let originalClassName = this.element[0].className;\n      objElement.orginalTagName = this.element[0].tagName.toLowerCase();\n      objElement.oldClasses = originalClassName;\n      objElement.orginalID = $(this.element[0]).attr('id');\n\n      let originalElementRemovedClass = this.element.first().removeClass();\n\n      let $hoverPanel = $(\n        '<' + objElement.orginalTagName + ' class=\"hover _justFlipIt_panel\">',\n      );\n\n      let $front = originalElementRemovedClass.wrap($hoverPanel);\n\n      $front.wrap($('<div class=\"front\">'));\n\n      $(this.element[0].parentElement).addClass(originalClassName);\n\n      let $panelWidth = this.elementWidth,\n        $panelHeight = this.elementHeight,\n        $panelBackgroundColor = this.elementBackgroundColor;\n\n      let $clone = this.element\n        .first()\n        .clone()\n        .removeClass();\n\n      let $back = $(\n        '<div class=\"' + backClass + ' ' + originalClassName + '\">',\n      ).append($clone);\n\n      let selfParentHover = this.element.parent().parent();\n      let findSelfParentHoverForEventHandler = this.element.closest('.hover');\n\n      selfParentHover\n        .css({\n          width: $panelWidth,\n          height: $panelHeight,\n        })\n        .append($back);\n\n      // STYLE ELEMENTS OPTION//\n      $.each(this.settings.Style, function(k, v) {\n        {\n          if (v.el) {\n            if (v.el.toLowerCase() === 'self') {\n              selfParentHover.css(v.style);\n            } else {\n              selfParentHover.find(v.el).css(v.style);\n            }\n          }\n        }\n      });\n\n      ////REPLACE DEFAULT CONTENT////\n      if (this.settings.Template !== '') {\n        selfParentHover\n          .find('.' + backClass)\n          .removeClass(originalClassName)\n          .html(this.settings.Template);\n        //selfParentHover.find('.' + backClass).html(this.settings.Template);\n      }\n\n      ////ACTION\n      if (this.settings.Click === true) {\n        selfParentHover.on('click', function(e) {\n          e.preventDefault();\n          $(this).toggleClass(flipClass);\n        });\n      } else if (typeof this.settings.Click === 'string') {\n        selfParentHover.find(this.settings.Click).on('click', function() {\n          selfParentHover.toggleClass(flipClass);\n        });\n      } else {\n        selfParentHover\n          .on('mouseenter', function() {\n            $(this).addClass(flipClass);\n          })\n          .on('mouseleave', function() {\n            $(this).removeClass(flipClass);\n          });\n      }\n      objElement.settings = this.settings;\n    },\n  });\n\n  // A really lightweight plugin wrapper around the constructor,\n  // preventing against multiple instantiations\n  $.fn[pluginName] = function(options) {\n    return this.each(function() {\n      if (!$.data(this, 'plugin_' + pluginName)) {\n        $.data(this, 'plugin_' + pluginName, new Plugin(this, options));\n      }\n    });\n  };\n\n  $.fn[_destroy] = function() {\n    // debugger;\n    this.each(function(k, i) {\n      let self;\n      let orginalID = $(i).attr('id') !== undefined ? $(i).attr('id') : '';\n      let orginalClass = $(i).attr('class');\n      if ($(this).hasClass('front')) {\n        self = $(this);\n      } else {\n        self = $(this).find('.front');\n      }\n      if (self.siblings().hasClass(objElement.backClass)) {\n        self.siblings().remove();\n        self\n          .children().attr('class',objElement.oldClasses)\n          .unwrap()\n          .unwrap();\n      } else {\n        self.unwrap();\n        self.next().remove();\n        $(self.firstChild)\n          .attr('class', objElement.oldClasses)\n          .unwrap();\n      }\n      $.removeData(this,'plugin_' + pluginName);\n    });\n  };\n})(jQuery, window, document);\n"],"names":["$","window1","document1","undefined","append","style","backClass","flipClass","oldClassNames","pluginName","defaults","Template","Click","FlipX","Style","objElement","Plugin","element","options","this","elementWidth","getComputedStyle","getPropertyValue","elementHeight","elementBackgroundColor","attr","settings","extend","_defaults","_name","init","prototype","frontClass","_flipIt","originalClassName","className","orginalTagName","tagName","toLowerCase","oldClasses","orginalID","originalElementRemovedClass","first","removeClass","$hoverPanel","wrap","parentElement","addClass","$panelWidth","$panelHeight","$clone","clone","$back","selfParentHover","parent","closest","css","width","height","each","k","v","el","find","html","on","e","preventDefault","toggleClass","fn","data","i","self","hasClass","siblings","remove","children","unwrap","next","firstChild","removeData","jQuery","window","document"],"version":3,"file":"index.d6b907b6.js.map"}